?file.path
file.path("mytest3.R","folder1","folder","/")
file.path("folder1","folder2")
?dir.create
dir.create("tesdir2")
dir.create(file.path("testdir2","testdir3", recursive=TRUE)
dir.create(file.path("testdir2","testdir3"), recursive=TRUE)
setwd(old.dir)
?unlink
unlink("testdir", RECURSIVE=TRUE)
unlink("testdir", RECURSIVE = TRUE)
unlink("testdir")
unlink("testdir", recursive = TRUE)
swirl()
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("my","name","is")
my_char <- c("My","name","is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char,"Mimica")
my_name
paste(my_name, collapse = " ")
paste("Hello","world!", sep=" ")
paste(seq(1,3),c("X","Y","Z"), sep="")
paste(1:3, c("X","Y","Z"), sep="")
paste(LETTERS, 1:4, sep="-")
x <- c(44,NA,5,NA)
x*3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z),100)
my_na <- my_data.is.na()
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[x(3,5,7)]
x[c(3,5,7)]
x[0]
x[3000]
x[!c[2,10]]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=1,bar=2,norf=NA)
vect <- c(foo = 11,bar=2,norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
vect2
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- (1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames -< c("patient","age","weight","bp","rating","test")
cnames <- c("patient","age","weight","bp","rating","test")
colnames(my_data,cnames)
?colnames
colnames(my_data,TRUE,cnames)
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
c < 7
6 < 7
10 <= 10
5 != 7
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical("twins","twins")
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints >c5)
which(ints > 5)
which(ints > 7)
any(ints <=0)
any(ints <0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function("My first function!")
boring_function()
boring_function
?sum
submit()
submit()
my_mean(c(4,5,10))
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(deriv, c(1.4,3.6,7.9,8.8))
evaluate(deriv(), c(1.4,3.6,7.9,8.8))
evaluate("deriv", c(1.4,3.6,7.9,8.8))
evaluate("deriv", c(1.4,3.6,7.9,8.8))
evaluate(deriv, c(1.4, 3.6, 7.9, 8.8))
evaluate(deriv3, c(1.4, 3.6, 7.9, 8.8))
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
eval(function(x){x+1}, 6)
evaluate(function(x){x+1}, 6)
evaluate(function(x){x(1)},c(8,4,0))
evaluate(function(x){x:1},c(8,4,0))
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[lenght(x)]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming","is","fun!")
submit()
telegram("hello","my","old","friend")
submmit()
submit()
mad_libs("Rio","Good","Clean")
submit()
"I" %p% "love" %p% "R!"
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(3,4,5,5,5,6,6)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flag_colors, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flag, class, character(1))
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrows(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips = sample(100, c(0,1), replace = TRUE)
flips = sample(100, c(0,1), replace = TRUE, prob = c(0.3, 0.7))
flips <- sample(100, c(0,1), replace = TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(100, 25)
rnorm(10, mean=100, sd=25)
>rpois()
>rpois
?rpois
rpois(5, 10)
replicate(100, rpois(5, 10))
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclasst2)
str(unclass(t2)
str(unclasst2)
str(unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t)
class(t)4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed, y=cars$dist)
plot(x=cars$dist, y=cars$speed)
plot(x=cars$speed, y=cars$dist)
plot(x=cars$speed, y=cars$dist, xlab = "Speed")
plot(x=cars$speed, y=cars$dist, xlab = "Speed", ylab ylab = "Stopping Distance")
plot(x=cars$speed, y=cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x=cars$speed, y=cars$dist, ylab = "Stopping Distance")
plot(x=cars$speed, y=cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x=cars$speed, y=cars$dist, xlab = "Speed", ylab = "Stop)
plot(cars, main="My Plot")
plot(cars, substitute = "My Plot Substitle")
plot(cars, sub = "My Plot Substitle")
plot(cars, sub = "My Plot Substitle")
plot(cars, sub = "My Plot Subtitle")
>par
?par
?plot
?par
plot(cars, col(2, bg = blue))
plot(cars, col = 2
)
plot(cars, xlim = c(10,15))
?point
?points
plot(cars, pch = 2)
mtcars
data("mtcars")
data(mtcars)
dim(mtcars)
head(mtcars)
?boxplot
boxplot(mpg ~ cyl)
boxplot(mtcars, mpg ~ cyl)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla")
udacious
numbers <- c(1:10)
numbers
numbers <- c(numbers, 11:20)
numbers
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla",
"Mimica")
udacious
mystery = nchar(udacious)
mystery
mystery == 11
udacious[mystery == 11]
data("mtcars")
data(mtcars)
names(mtcars)
?mtcars
mtcars
str(mtcars)
dim(mtcars)
?row.names
row.names(mtcars) <- c(1:32)
mtcars
data("mtcars")
data(mtcars)
head(mtcars, 10)
head(mtcars)
tail(mtcars,3)
mtcars$mpg
mean(mtcars$mpg)
?function
getwd()
setwd("/Users/mimica/Google Drive/CodeDevelopment/Udacity/data-analysis-with-r--ud651")
getwd()
home_dir <- getwd()
statesInfo <- read.csv("stateData.csv")
head(statesInfo)
str(statesInfo)
View(statesInfo)
View(statesInfo)
subset(statesInfo, state.region = 1)
dataSet[statesInfo$state.region == 1, ]
statesInfo[statesInfo$state.region == 1, ]
stateSubsetBracket <- statesInfo[statesInfo$state.region == 1, ]
head(stateSubsetBracket)
dim(stateSubsetBracket)
install.packages('knitr', dependencies = T)
library(knitr)
setwd("/Users/mimica/Google Drive/CodeDevelopment/Udacity/data-analysis-with-r--ud651/module2")
home_dir <- getwd()
statesInfo <- read.csv("stateData.csv")
stateSubsetBracket <- statesInfo[statesInfo$state.region == 1, ]
```{r}
```{r}
```{r}
?cars
str(cars)
Title
========================================================
This is an R Markdown document or RMD. Markdown is a simple formatting syntax for authoring web pages (click the **Help** toolbar button for more details on using R Markdown).
```{r}
?cars
str(cars)
```
When you click the **Knit HTML** button a web page will be generated that includes both content as well as the output of any embedded R code chunks within the document.
Title
========================================================
This is an R Markdown document or RMD. Markdown is a simple formatting syntax for authoring web pages (click the **Help** toolbar button for more details on using R Markdown).
```{r}
?cars
str(cars)
```
Title
========================================================
This is an R Markdown document or RMD. Markdown is a simple formatting syntax for authoring web pages (click the **Help** toolbar button for more details on using R Markdown).
```{r}
?cars
```
Title
========================================================
This is an R Markdown document or RMD. Markdown is a simple formatting syntax for authoring web pages (click the **Help** toolbar button for more details on using R Markdown).
```{r}
```
?cars
?cars
?cars
str(cars)
plot(cars)
summary(mtcars)
dim(cars)
str(cars)
str(mtcars)
subset(mtcars, mpg > 23)
efficient. <- subset(mtcars, mpg > 23)
efficient
efficient <- subset(mtcars, mpg > 23)
efficient
View(efficient.)
View(efficient.)
View(efficient.)
View(efficient.)
View(efficient)
rows(efficient)
dim(efficient)
nrow(efficient)
nrow(efficient)
efficient <- subset(mtcars, mpg > 23)
efficient <- subset(mtcars, mpg > 23)
subset(mtcars, mpg > 30 & hp > 100)
subset(mtcars, mpg < 14 | disp > 390)
subset(mtcars, qsec <= 16.90)
lightCars <- subset(mtcars, wt < 2000)
nrow(lightCars)
lightCars
mtcars$year <- 1974
View(mtcars)
mtcars <- subset(mtcars, select = -year)
View(mtcars)
mtcars$year <- c(1973, 1974)
View(mtcars)
mtcars <- subset(mtcars, select = -year)
View(mtcars)
mtcars$wt
cond <- mtcars$wt < 3
cond
mtcars$weight_class <- ifelse(cond, 'light', 'average')
mtcars$weight_class
cond <- mtcars$wt > 3.5
mtcars$weight_class <- ifelse(cond, 'heavy', mtcars$weight_class)
mtcars$weight_class
rm(cond)
rm(efficient)
subset(mtcars, mpg >=30 | hp < 60)
reddit <- read.csv('reddit.csv')
dim(reddit)
head(reddit)
tail(reddit)
str(reddit)
head(reddit)
str(reddit)
table(reddit$employment.status)
summary(reddit)
levels(reddit$age.range)
library(ggplot2)
install.packages('ggplot2', dependencies = T)
library(ggplot2)
qplot()
qplot(reddit)
install.packages('devtools', dependencies = T)
library(devtools)
install_version("colorspace","1.2-4")
library(ggplot2)
qplot()
qplot(reddit)
qplot(data = reddit, x = age.range)
summary(reddit)
qplot(data = reddit, x = income.range)
levels(reddit$age.range)
factor(age.range, levels=c("Under 18","18-24","25-34","35-44","45-54","55-64","65 or Above"), ordered=TRUE)
factor(reddit$age, levels=c("Under 18","18-24","25-34","35-44","45-54","55-64","65 or Above"), ordered=TRUE)
reddit$age = factor(reddit$age, levels=c("Under 18","18-24","25-34","35-44","45-54","55-64","65 or Above"), ordered=TRUE)
qplot(data = reddit, x = age.range)
?qplot
reddit$age.range <- ordered(reddit$age.range, levels=c("Under 18","18-24","25-34","35-44","45-54","55-64","65 or Above"))
qplot(data = reddit, x = age.range)
reddit$age.range <- factor(reddit$age.range, levels = c("Under 18","18-24","25-34","35-44","45-54","55-64","65 or Above"), ordered = TRUE)
qplot(data = reddit, x = age.range)
levels(reddit$income.range)
reddit$income.range <- ordered(reddit$income.range, levels = c("Under $20,000", "$20,000 - $29,999", "$30,000 - $39,999", "$40,000 - $49,999", "$50,000 - $69,999", "$70,000 - $99,999",  "$100,000 - $149,999", "$150,000 or more"))
qplot(data = reddit, x = income.range)
